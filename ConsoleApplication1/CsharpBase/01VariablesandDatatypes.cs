using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CsharpBase
{
    /// <summary>
    /// 变量和数据类型
    /// </summary>
    public class _01VariablesandDatatypes
    {
        /* 1. 变量: 声明1个变量其实就是在内存中开辟1块空间用来存储数据.
            *    需要注意的是:
            *    a.开空间的时候(声明变量的时候)要指定空间的类型.
            *    b.还要为这个空间取1个独一无二的名字. 
            *    
            * 2. 声明变量语法:
            *    数据类型 变量的名称;
            *    int num;
            *    当CPU执行到这句代码的时候,就会在内存中开辟1块int类型的空间,然后为这个空间取1个别名 叫做num.
            *    因为这个空间的类型是int类型的,所以只能在这个空间中存储int类型的数据.
            *    
            * 3. 往变量所代表的空间中存储数据.
            *    = 号. 赋值符号.
            *    语法:
            *    变量的名字 = 要往这个变量中存储的数据.
            *    num = 12; 当执行到这句话的时候,就会将赋值符号右边的数据 存储到 左边的变量所代表的那块空间中去.            *    
            *    需要注意的是:在为变量赋值的时候,赋值符号右边的数据的类型必须要与左边的变量的类型相同.
            *    
            * 4. 如何去使用变量中的值. 
            *    在需要使用变量的值的地方,直接写上变量的名字就可以啦..
            *    需要注意的是,在使用变量的时候 不要为变量加上双引号.            
            *    
            * 5. 最常用的数据类型
            *    数值类型:
            *       整型:不带小数的数字.
            *          long int short byte:
            *          相同点: 都可以存储整型的数据. 但是他们各自的范围不同.
            *          long:范围最大. 即使是最大 也有范围.
            *          int:范围比long小. -21e +21e
            *          short: 范围比int小. -32768  +32767
            *          byte: 范围比short小. 0-255
            *       浮点型: 带小数的数字.
            *          decimal double float
            *          相同点: 都可以用来存储带小数点的数字. 但是他们的精度不同. 精度:小数点后面可以精确的位数.
            *          
            *          decimal: 精度是最高的. 虽然最高 但是仍然有限定.  高精度
            *                 如果要存储金钱的数据 那么要求使用decimal来存储.
            *          double: 精度比decimal低. 双精度
            *          float: 精度比double低.   单精度
            *        需要注意的是
            *        a. 如果我们直接写1个小数的数据.这个数据的类型默认是double类型的.
            *           如果我们要指定这个小数的类型为decimal类型的 那么只需要在这个小数的后面加上1个m
            *        b. 如果我们要指定这个小数的类型为float类型的 那么只需要在这个小数的后面加上1个f
            *        c. 在小数的后面加1个d 代表这个小数是1个double类型的,其实加不加d 都是double类型的. 
            *    非数值类型:
            *        char: 字符.   单个字符的数据. 这单个数据必须要用单引号引起来.
            *              char类型的数据只能由单个字符组成,并且要用单引号引起来.
            *              只能有单个 不能有多个或者0个.
            *              
            *              当我们存储的数据只有单个字符的时候.
            *        
            *        string: 字符串. 由多个字符组合起来的 字符串的数据必须要用双引号引起来.
            *                字符串的数据中如果只有1个字符 也是可以的. 也可以1个都没有 
            *        
            * 
            * 6. 声明变量的同时就为这个变量赋值.
            *    数据类型 变量的名称 = 数据;
            *    string str = "小明";
            *    
            * 7. 同时声明多个数据类型相同的变量.
            *    int i1,i2,i3;
            *    这几个变量声明完以后 他们的类型都是int类型的.
            *    如果多个变量的类型不同 那么这种方式是不行的.
            *    
            * 8. 变量中的值能否更改?
            *    重新为变量赋值就可以了.
            *    1个变量中只能存储1个数据.为变量赋值的时候,如果变量中已经有值了,那么新值就会将老的值覆盖掉.
            *    为变量赋值的时候. 赋值的数据的类型一定要和变量的类型一致.
            *    
            *    
            * 9. 使用变量的值.
            *    a. 变量1定要先声明 再使用.
            *    b. 在使用变量的值之前,一定要保证这个变量中已经有值了.
            *    c. 使用变量的时候,一定不要用双引号将变量的名字引起来.
            *       
            *        
            * 10.变量的命名.
            *    规则: 必须遵守,否则就会提示语法错误 导致无法编译.
            *      a. 变量的名字只能以 任意的字母、下划线、@符号开头. 不能以数字开头.
            *      b. 名字后面跟任意的字母、任意的数字、下划线.
            *      c. 名字不能与C#的关键字重复.在VS中以蓝色显示 那么这个单词就是1个关键字.
            *      d. 在C#中大小写是敏感的.
            *      e. 同1个变量 不允许重复定义.
            *    规范: 是所有的程序员都在遵守的.
            *      a. 变量的命名一定要有意义. 让别人1看到变量的名字 就知道这个变量中存储的是什么样的数据.
            *      b. 如果变量的名字由多个单词组成,那么第1个单词的首字母小写,其余的单词的首字母大写.
            *      c. 变量的名字是1个缩写. CCTV 每个单词全部大写.
            *      d. 如果第1个单词的首字母因为语法的原因必须要大写 那么就用_前缀.
            *         
            * 11. 赋值符号的右边也可以是1个表达式.
            *     如果是1个表达式的话,那么会将这个表达式的结果算出来,将这个结果赋值给 赋值符号 左边的变量.
            *     int a = 1 + 1;
            *     先声明变量a。 然后计算1+1表达式的结果.然后将结果通过赋值符号赋值给变量a。
            *      
            * 12. 字符串的连接.
            *     + 号:
            *     a. 表示数学意义上的求和运算. 
            *        当+号两边的数据的类型 是数值类型的时候, 此时加号代表求和运算.
            *     b. 当+号的两边有任意的1边的数据的类型是字符串类型的时候,这个时候+号代表字符串的连接.
            *        将加号两边的数据连接起来 组成1个新的字符串.
            *     
            * 
            *      如果我们单独的写1个表达式,会报错. 因为表达式都有结果,我们必须处理这个结果.
            *      1). 将这个结果打印
            *      2). 使用1个变量将表达式的结果存储在变量中.
            *      
            * 
            *     在Console.WriteLine()的小括弧中我们也可以写1个表达式.这个时候会将这个表达式的结果先求出来,然后打印这个结果.
            *     
            *     如果表达式是1个连续的表达式. 是从左到右两个两个的计算.
            * 
            */


        public void test1()
        {

            string name = "王思发";
            char gender = '男';
            byte age = 18;
            double height = 1.65;
            double weight = 67.5;


            Console.WriteLine("大家好,我叫" + name + ",我今年" + age + "岁了,我是" + gender + "的,我是身高是:" + height + ",我是体重是:" + weight);

            Console.WriteLine("大家好,我叫" + name + ",我是" + gender + "的,我的年龄是" + age + ",我的身高是" + height + ",我是体重是" + weight);
        }


        public void test2()
        {

            string name = "jack";

            string info = "你好," + name;


            Console.WriteLine(info);
            Console.WriteLine(1 + 1 + 1 + 1 + "1");//"41"  "1111"  "11111" ?

        }

        public void longtype()
        {
            Console.WriteLine(long.MinValue);
            Console.WriteLine(long.MaxValue);

        }


        public void decAndFloat()
        {
            //float是单精度，double是双精度，decimal是高精度，它们所占的内存空间不一样，表示的位数也不一样。
            //除了科学计算以外，一般不用double型的。对于数字（包括小数）一般用decimal型的。
            //https://bbs.csdn.net/wap/topics/380068305
            // double.MaxValue:1.79769313486232E+308
            //decimal.MaxValue:79228162514264337593543950335
            //float.MaxValue:3.402823E+38

            //3.402823669209E+38=3.4*10^38

            string brand = "nokia";
            string model = "lumia800";
            decimal price = 1500m;
            double weight = 0.3;

            Console.WriteLine("我的手机的品牌是:" + brand + ",型号是:" + model + ",价格是:" + price + ".重量是:" + weight + "Kg");
            Console.WriteLine("double.MaxValue:"+ double.MaxValue);
            Console.WriteLine("decimal.MaxValue:" + decimal.MaxValue);

            float d1 = 12.34f;
            float d = 5.6f;
            Console.WriteLine("float.MaxValue:" + float.MaxValue);
            double res = d1 + d;
        }



    }
}
